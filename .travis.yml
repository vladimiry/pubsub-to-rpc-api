branches:
  only:
    - "master"
language: node_js
node_js:
  - "lts/*"
os:
  - linux
  - osx
cache:
  yarn: true
before_install:
  - | # installing the most recent yarn version
    curl -o- -L https://yarnpkg.com/install.sh | bash;
    export PATH="$HOME/.yarn/bin:$PATH";
install:
  - yarn install --pure-lockfile --network-timeout 1000000
  - yarn add rxjs@6
script:
  - npx envinfo
  - node --version
  - npm --version
  - yarn --version
  - yarn run lib
jobs:
  # fast_finish: true
  include:
    - &windows
      stage: "Windows"
      os: windows
      # tackle travis job finishing issue: "tar: C\:\\Users\travis\\AppData\\Local\\Yarn\\Cache: Cannot stat: No such file or directory"
      cache: false
      env:
        # prevent the following error: No output has been received in the last 10m0s
        # https://travis-ci.community/t/build-doesnt-finish-after-completing-tests/288/9
        - YARN_GPG=no
      before_install:
        - powershell Get-Process
        - echo $(where.exe node.exe)
        - echo $(yarn cache dir)
        # enable running local PowerShell scripts
        - powershell -Command 'Set-ExecutionPolicy -ExecutionPolicy RemoteSigned'
        - | # tackle the performance issue of "yarn install" execution, see https://travis-ci.community/t/current-known-issues-please-read-this-before-posting-a-new-topic/264/15
          export NODEPATH=$(where.exe node.exe)
          export PROJECTDIR=$(pwd)
          export YARNCACHE=$(yarn cache dir)
          export TEMPDIR=$LOCALAPPDATA\\Temp
          powershell Add-MpPreference -ExclusionProcess ${NODEPATH}
          powershell Add-MpPreference -ExclusionPath ${YARNCACHE}
          powershell Add-MpPreference -ExclusionPath ${PROJECTDIR}
          powershell Add-MpPreference -ExclusionPath ${TEMPDIR}
          echo "DisableArchiveScanning..."
          powershell Start-Process -PassThru -Wait PowerShell -ArgumentList "'-Command Set-MpPreference -DisableArchiveScanning \$true'"
          echo "DisableBehaviorMonitoring..."
          powershell Start-Process -PassThru -Wait PowerShell -ArgumentList "'-Command Set-MpPreference -DisableBehaviorMonitoring \$true'"
          echo "DisableRealtimeMonitoring..."
          powershell Start-Process -PassThru -Wait PowerShell -ArgumentList "'-Command Set-MpPreference -DisableRealtimeMonitoring \$true'"
    - <<: *windows
      node_js: "lts/*"
